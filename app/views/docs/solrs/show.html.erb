<% content_for :menu do -%>
  <%#= render :partial => 'shared/menu' %>
<% end %>

<% content_for :footer do -%>
  <%= render :partial => 'shared/footer' %>
<% end %>

<div class='main-docs white-board logo2'>
  <%= link_to image_tag('logo-e.png',
                        :class => 'prepend-3',
                        :alt => 'Rails Ecommerce, built to scale.'),
              "http://github.com/drhenner/ror_ecommerce", 'data-popup' => true -%>
</div>

<div class='main-docs white-board'>

  <div class='' style='display:block;'>
    <h3>Solr Searching</h3>
    <p class='margin-sides-10'>
      Solr is the hot new toy for searching.  Currently this searches the product's name, product_keywords and description.  This can be configured to do fuzzy searching and has many more capabilities.  Adding functionality to this search can be easily done.
    </p>
    <p class='margin-sides-10'>
    Take a look at the <%= link_to 'Sunspot', 'http://outoftime.github.com/sunspot/docs/index.html', 'data-popup' => true %> gem to configure searching to your liking.
    </p>
    <p class='margin-sides-10'>
      If you prefer to turn searching off you simply need to remove a few lines from the product model.

      <pre class='CodeRay' ><%=raw textilize(
      "
      searchable do
        text    :name, :default_boost => 2
        text      :product_keywords#, :multiple => true
        text      :description
        time      :deleted_at
      end
      ") %></pre>

      Then go to the app/views/layout/product_search.html.erb and remove the code.
    </p>
  </div>

</div>
<div class=' clear'></div>
<div class=''>Please use <b>Ruby 1.9.2</b> and enjoy Rails <%= rails_version %>.</div>

<% content_for :right_panel do -%>
  <%#= render :partial => 'docs/contents'%>
  <%= render :partial => '/shared/side_menu2' %>
<% end %>